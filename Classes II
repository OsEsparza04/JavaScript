class School {
   constructor(name,level,numberOfStudents){
     this._name=name;
     this._level=['primary','middle','high'];
     this._numberOfStudents=numberOfStudents;
   }
  
  set numberOfStudents(numStudents){
    if(typeof numStudents==='number'){
      this._numberOfStudents;
    } else {
      console.log('Invalid input: numberOfStudents must be set to a number');
    }
  }
   get name(){
     return this._name;
   }
  
  get level(){
    return this._level;
  }
  
  get numberOfStudents(){
    this._numberOfStudents; 
  }
 
  quickFacts(){
    console.log(`${this._name} educates  ${this._numberOfStudents} students at the  ${this._level} school level.`); 
  }

  // Checkt this later, but keep going 
  static pickSubstituteTeacher(substituteTeachers){
   let substitutes=['Jamal Crawford', 'Lou Williams', 'J. R. Smith', 'James Harden', 'Jason Terry', 'Manu Ginobli'];
    
    Math.floor(substituteTeachers.length * Math.random(1));
    
    
  }
  
}

class PrimarySchool extends School {
    constructor(name,numberOfStudents,pickupPolicy){
      super(name); 
      this._level='Primary'
      this._name=name; 
      this._numberOfStudents=numberOfStudents; 
      this._pickupPolicy=pickupPolicy; 
    }
   get pickupPolicy(){
     return this._pickupPolicy; 
   }
}

class HighSchool extends School{ 
constructor (name,numberOfStudents,sportsTeams){
  super('high');
  super(name);
  super(numberOfStudents); 
  this._sportsTeams=['']; 
}
  
  
  get sportsTeams(){
    console.log(this._sportsTeams); 
  }
}

const lorrainHansbury= new PrimarySchool ('Lorraine Hansbury',514,'Students must be picked up by parent,guardian, or a family member over the age of 13.');
console.log(lorrainHansbury)

lorrainHansbury.quickFacts(); 
